<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="278" onload="init(evt)" viewBox="0 0 1200 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="261.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="261.00"> </text><svg id="frames" x="10" width="1180"><g><title>select_move (mctsagent.py:177) (20 samples, 1.03%)</title><rect x="0.1540%" y="84" width="1.0267%" height="15" fill="rgb(227,0,7)"/><text x="0.4040%" y="94.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:108) (43 samples, 2.21%)</title><rect x="3.6961%" y="148" width="2.2074%" height="15" fill="rgb(217,0,24)"/><text x="3.9461%" y="158.50">_..</text></g><g><title>_connect_5_into_a_line (connect5game.py:109) (29 samples, 1.49%)</title><rect x="5.9035%" y="148" width="1.4887%" height="15" fill="rgb(221,193,54)"/><text x="6.1535%" y="158.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (22 samples, 1.13%)</title><rect x="12.2690%" y="164" width="1.1294%" height="15" fill="rgb(248,212,6)"/><text x="12.5190%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:58) (90 samples, 4.62%)</title><rect x="10.0616%" y="148" width="4.6201%" height="15" fill="rgb(208,68,35)"/><text x="10.3116%" y="158.50">_conn..</text></g><g><title>get_piece_at_point (board.py:112) (25 samples, 1.28%)</title><rect x="13.3984%" y="164" width="1.2834%" height="15" fill="rgb(232,128,0)"/><text x="13.6484%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:59) (53 samples, 2.72%)</title><rect x="14.6817%" y="148" width="2.7207%" height="15" fill="rgb(207,160,47)"/><text x="14.9317%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:60) (26 samples, 1.33%)</title><rect x="17.4025%" y="148" width="1.3347%" height="15" fill="rgb(228,23,34)"/><text x="17.6525%" y="158.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (29 samples, 1.49%)</title><rect x="23.4086%" y="164" width="1.4887%" height="15" fill="rgb(218,30,26)"/><text x="23.6586%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:74) (95 samples, 4.88%)</title><rect x="20.7906%" y="148" width="4.8768%" height="15" fill="rgb(220,122,19)"/><text x="21.0406%" y="158.50">_conne..</text></g><g><title>_connect_5_into_a_line (connect5game.py:75) (53 samples, 2.72%)</title><rect x="25.6674%" y="148" width="2.7207%" height="15" fill="rgb(250,228,42)"/><text x="25.9174%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:76) (21 samples, 1.08%)</title><rect x="28.3881%" y="148" width="1.0780%" height="15" fill="rgb(240,193,28)"/><text x="28.6381%" y="158.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:91) (52 samples, 2.67%)</title><rect x="31.7762%" y="148" width="2.6694%" height="15" fill="rgb(216,20,37)"/><text x="32.0262%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:92) (29 samples, 1.49%)</title><rect x="34.4456%" y="148" width="1.4887%" height="15" fill="rgb(206,188,39)"/><text x="34.6956%" y="158.50"></text></g><g><title>is_final_state (connect5game.py:123) (673 samples, 34.55%)</title><rect x="2.9774%" y="132" width="34.5483%" height="15" fill="rgb(217,207,13)"/><text x="3.2274%" y="142.50">is_final_state (connect5game.py:123)</text></g><g><title>_connect_5_into_a_line (connect5game.py:108) (57 samples, 2.93%)</title><rect x="38.2957%" y="148" width="2.9261%" height="15" fill="rgb(231,73,38)"/><text x="38.5457%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:109) (21 samples, 1.08%)</title><rect x="41.2218%" y="148" width="1.0780%" height="15" fill="rgb(225,20,46)"/><text x="41.4718%" y="158.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (25 samples, 1.28%)</title><rect x="45.7392%" y="164" width="1.2834%" height="15" fill="rgb(210,31,41)"/><text x="45.9892%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:58) (90 samples, 4.62%)</title><rect x="44.0452%" y="148" width="4.6201%" height="15" fill="rgb(221,200,47)"/><text x="44.2952%" y="158.50">_conn..</text></g><g><title>get_piece_at_point (board.py:112) (32 samples, 1.64%)</title><rect x="47.0226%" y="164" width="1.6427%" height="15" fill="rgb(226,26,5)"/><text x="47.2726%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:59) (50 samples, 2.57%)</title><rect x="48.6653%" y="148" width="2.5667%" height="15" fill="rgb(249,33,26)"/><text x="48.9153%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:72) (21 samples, 1.08%)</title><rect x="53.3881%" y="148" width="1.0780%" height="15" fill="rgb(235,183,28)"/><text x="53.6381%" y="158.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (23 samples, 1.18%)</title><rect x="57.3409%" y="164" width="1.1807%" height="15" fill="rgb(221,5,38)"/><text x="57.5909%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:74) (104 samples, 5.34%)</title><rect x="54.7228%" y="148" width="5.3388%" height="15" fill="rgb(247,18,42)"/><text x="54.9728%" y="158.50">_connec..</text></g><g><title>get_piece_at_point (board.py:112) (30 samples, 1.54%)</title><rect x="58.5216%" y="164" width="1.5400%" height="15" fill="rgb(241,131,45)"/><text x="58.7716%" y="174.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:75) (51 samples, 2.62%)</title><rect x="60.0616%" y="148" width="2.6181%" height="15" fill="rgb(249,31,29)"/><text x="60.3116%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:76) (24 samples, 1.23%)</title><rect x="62.6797%" y="148" width="1.2320%" height="15" fill="rgb(225,111,53)"/><text x="62.9297%" y="158.50"></text></g><g><title>_connect_5_into_a_line (connect5game.py:91) (52 samples, 2.67%)</title><rect x="65.8624%" y="148" width="2.6694%" height="15" fill="rgb(238,160,17)"/><text x="66.1124%" y="158.50">_c..</text></g><g><title>_connect_5_into_a_line (connect5game.py:92) (30 samples, 1.54%)</title><rect x="68.5318%" y="148" width="1.5400%" height="15" fill="rgb(214,148,48)"/><text x="68.7818%" y="158.50"></text></g><g><title>is_final_state (connect5game.py:127) (660 samples, 33.88%)</title><rect x="37.5257%" y="132" width="33.8809%" height="15" fill="rgb(232,36,49)"/><text x="37.7757%" y="142.50">is_final_state (connect5game.py:127)</text></g><g><title>&lt;genexpr&gt; (connect5game.py:133) (24 samples, 1.23%)</title><rect x="72.1766%" y="148" width="1.2320%" height="15" fill="rgb(209,103,24)"/><text x="72.4266%" y="158.50"></text></g><g><title>is_final_state (connect5game.py:132) (35 samples, 1.80%)</title><rect x="71.6632%" y="132" width="1.7967%" height="15" fill="rgb(229,88,8)"/><text x="71.9132%" y="142.50">i..</text></g><g><title>_simulate_random_game_for_state (mctsagent.py:223) (1,383 samples, 71.00%)</title><rect x="2.5154%" y="100" width="70.9959%" height="15" fill="rgb(213,181,19)"/><text x="2.7654%" y="110.50">_simulate_random_game_for_state (mctsagent.py:223)</text></g><g><title>is_over (game.py:117) (1,380 samples, 70.84%)</title><rect x="2.6694%" y="116" width="70.8419%" height="15" fill="rgb(254,191,54)"/><text x="2.9194%" y="126.50">is_over (game.py:117)</text></g><g><title>get_legal_points (board.py:118) (112 samples, 5.75%)</title><rect x="75.3593%" y="132" width="5.7495%" height="15" fill="rgb(241,83,37)"/><text x="75.6093%" y="142.50">get_leg..</text></g><g><title>__new__ (&lt;string&gt;:1) (57 samples, 2.93%)</title><rect x="78.1828%" y="148" width="2.9261%" height="15" fill="rgb(233,36,39)"/><text x="78.4328%" y="158.50">__..</text></g><g><title>get_legal_points (board.py:119) (90 samples, 4.62%)</title><rect x="81.1088%" y="132" width="4.6201%" height="15" fill="rgb(226,3,54)"/><text x="81.3588%" y="142.50">get_l..</text></g><g><title>is_free_point (board.py:124) (73 samples, 3.75%)</title><rect x="81.9815%" y="148" width="3.7474%" height="15" fill="rgb(245,192,40)"/><text x="82.2315%" y="158.50">is_f..</text></g><g><title>get_piece_at_point (board.py:112) (46 samples, 2.36%)</title><rect x="83.3676%" y="164" width="2.3614%" height="15" fill="rgb(238,167,29)"/><text x="83.6176%" y="174.50">ge..</text></g><g><title>select_move (randomagent.py:10) (237 samples, 12.17%)</title><rect x="74.4353%" y="116" width="12.1663%" height="15" fill="rgb(232,182,51)"/><text x="74.6853%" y="126.50">select_move (rando..</text></g><g><title>select_move (randomagent.py:11) (71 samples, 3.64%)</title><rect x="86.6016%" y="116" width="3.6448%" height="15" fill="rgb(231,60,39)"/><text x="86.8516%" y="126.50">sele..</text></g><g><title>&lt;listcomp&gt; (randomagent.py:11) (67 samples, 3.44%)</title><rect x="86.8070%" y="132" width="3.4394%" height="15" fill="rgb(208,69,12)"/><text x="87.0570%" y="142.50">&lt;li..</text></g><g><title>__init__ (move.py:40) (24 samples, 1.23%)</title><rect x="89.0144%" y="148" width="1.2320%" height="15" fill="rgb(235,93,37)"/><text x="89.2644%" y="158.50"></text></g><g><title>_simulate_random_game_for_state (mctsagent.py:224) (342 samples, 17.56%)</title><rect x="73.5113%" y="100" width="17.5565%" height="15" fill="rgb(213,116,39)"/><text x="73.7613%" y="110.50">_simulate_random_game_for_s..</text></g><g><title>clone (board.py:78) (32 samples, 1.64%)</title><rect x="91.6324%" y="148" width="1.6427%" height="15" fill="rgb(222,207,29)"/><text x="91.8824%" y="158.50"></text></g><g><title>look_ahead_next_move (game.py:127) (57 samples, 2.93%)</title><rect x="91.3244%" y="132" width="2.9261%" height="15" fill="rgb(206,96,30)"/><text x="91.5744%" y="142.50">lo..</text></g><g><title>apply_move (game.py:123) (96 samples, 4.93%)</title><rect x="91.0678%" y="116" width="4.9281%" height="15" fill="rgb(218,138,4)"/><text x="91.3178%" y="126.50">apply_..</text></g><g><title>_simulate_random_game_for_state (mctsagent.py:225) (111 samples, 5.70%)</title><rect x="91.0678%" y="100" width="5.6982%" height="15" fill="rgb(250,191,14)"/><text x="91.3178%" y="110.50">_simula..</text></g><g><title>winner (connect5game.py:150) (31 samples, 1.59%)</title><rect x="96.8172%" y="132" width="1.5914%" height="15" fill="rgb(239,60,40)"/><text x="97.0672%" y="142.50"></text></g><g><title>&lt;module&gt; (test.py:38) (1,920 samples, 98.56%)</title><rect x="0.1540%" y="52" width="98.5626%" height="15" fill="rgb(206,27,48)"/><text x="0.4040%" y="62.50">&lt;module&gt; (test.py:38)</text></g><g><title>evaluate (test.py:23) (1,920 samples, 98.56%)</title><rect x="0.1540%" y="68" width="98.5626%" height="15" fill="rgb(225,35,8)"/><text x="0.4040%" y="78.50">evaluate (test.py:23)</text></g><g><title>select_move (mctsagent.py:185) (1,879 samples, 96.46%)</title><rect x="2.2587%" y="84" width="96.4579%" height="15" fill="rgb(250,213,24)"/><text x="2.5087%" y="94.50">select_move (mctsagent.py:185)</text></g><g><title>_simulate_random_game_for_state (mctsagent.py:227) (38 samples, 1.95%)</title><rect x="96.7659%" y="100" width="1.9507%" height="15" fill="rgb(247,123,22)"/><text x="97.0159%" y="110.50">_..</text></g><g><title>get_winner (connect5game.py:146) (37 samples, 1.90%)</title><rect x="96.8172%" y="116" width="1.8994%" height="15" fill="rgb(231,138,38)"/><text x="97.0672%" y="126.50">g..</text></g><g><title>all (1,948 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(231,145,46)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (test.py:5) (25 samples, 1.28%)</title><rect x="98.7166%" y="52" width="1.2834%" height="15" fill="rgb(251,118,11)"/><text x="98.9666%" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (25 samples, 1.28%)</title><rect x="98.7166%" y="68" width="1.2834%" height="15" fill="rgb(217,147,25)"/><text x="98.9666%" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (25 samples, 1.28%)</title><rect x="98.7166%" y="84" width="1.2834%" height="15" fill="rgb(247,81,37)"/><text x="98.9666%" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (25 samples, 1.28%)</title><rect x="98.7166%" y="100" width="1.2834%" height="15" fill="rgb(209,12,38)"/><text x="98.9666%" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (25 samples, 1.28%)</title><rect x="98.7166%" y="116" width="1.2834%" height="15" fill="rgb(227,1,9)"/><text x="98.9666%" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (25 samples, 1.28%)</title><rect x="98.7166%" y="132" width="1.2834%" height="15" fill="rgb(248,47,43)"/><text x="98.9666%" y="142.50"></text></g><g><title>&lt;module&gt; (utils.py:44) (23 samples, 1.18%)</title><rect x="98.8193%" y="148" width="1.1807%" height="15" fill="rgb(221,10,30)"/><text x="99.0693%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (23 samples, 1.18%)</title><rect x="98.8193%" y="164" width="1.1807%" height="15" fill="rgb(210,229,1)"/><text x="99.0693%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (23 samples, 1.18%)</title><rect x="98.8193%" y="180" width="1.1807%" height="15" fill="rgb(222,148,37)"/><text x="99.0693%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (23 samples, 1.18%)</title><rect x="98.8193%" y="196" width="1.1807%" height="15" fill="rgb(234,67,33)"/><text x="99.0693%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (23 samples, 1.18%)</title><rect x="98.8193%" y="212" width="1.1807%" height="15" fill="rgb(247,98,35)"/><text x="99.0693%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (23 samples, 1.18%)</title><rect x="98.8193%" y="228" width="1.1807%" height="15" fill="rgb(247,138,52)"/><text x="99.0693%" y="238.50"></text></g></svg></svg>